---
- name: "Do input validation"
  run_once: True
  import_tasks: validate.yml

# Initialize domain database
- name: "Create YP database directory"
  file:
    state: directory
    path: "{{ ypserver_ypdbdir_domain }}"
    mode: "0700"
    owner: root
    group: wheel

- name: "Provision master server"
  import_tasks: master.yml
  when:
   - inventory_hostname == ypserver_master

# Complete system setup
- name: "Create /etc/yp directory"
  file:
    state: directory
    path: /etc/yp
    mode: "0700"
    owner: root
    group: wheel
  when:
    - not ypserver_nopush

- name: "Create /etc/yp/DOMAINNAME server list for ypbind"
  template:
    src: "DOMAINNAME.j2"
    dest: "/etc/yp/{{ ypserver_domain }}"
    mode: "0600"
    owner: root
    group: wheel
  when:
    - not ypserver_nopush

- name: "Add servers to /etc/hosts"
  blockinfile:
    path: "/etc/hosts"
    block: "{{ lookup('template', 'templates/hosts.j2') }}" # noqa no-tabs
    # The tab characters are intentional
    marker: "# {mark} {{ ypserver_domain }} - YP/NIS servers"
    mode: "0644"
    owner: root
    group: wheel
  when:
    - ypserver_set_hosts

- name: "Save YP domainname for the system"
  copy:
    content: "{{ ypserver_domain }}"
    dest: /etc/domainname
    owner: root
    group: wheel
    mode: "0644"
  register: ypserver__etc_domainname
  when:
    - ypserver_set_domainname

- name: "Check YP domainname value on the system"
  command:
    cmd: "domainname"
  register: ypserver__domainname
  changed_when: false

- name: "Update YP domainname for the system"
  command: domainname {{ ypserver_domain }}
  when:
    - ypserver_set_domainname
    - ypserver__domainname.stdout != ypserver_domain

- name: "Limit access to YP/NIS server - securenet(5) file"
  template:
    src: "securenet.j2"
    dest: "{{ ypserver_ypdbdir }}/securenet"
    mode: "0600"
    owner: root
    group: wheel
  when:
    - ypserver_ypservacl | length > 0
    - not ypserver_set_ypservacl

- name: "Limit access to YP/NIS server - ypserv.acl(5) file"
  template:
    src: "ypserv.acl.j2"
    dest: "{{ ypserver_ypdbdir }}/ypserv.acl"
    mode: "0600"
    owner: root
    group: wheel
  when:
    - ypserver_ypservacl | length > 0
    - ypserver_set_ypservacl

# Bring up the YP/NIS domain
- name: "Enable portmap"
  service:
    name: portmap
    enabled: true
    state: started

- name: "Enable ypserv"
  service:
    name: ypserv
    args: >
      "{{ '-d' if ypserver_usedns else '' }}"
      "{{ '-a /var/yp/ypserv.acl' if ypserver_set_ypservacl else '' }}"
    enabled: true

- name: "Start ypserv"
  service:
    name: ypserv
    state: started

- name: "Enable yppasswdd"
  service:
    name: yppasswdd
    enabled: true
    state: started
  when:
    - ypserver_set_yppasswdd
    - inventory_hostname == ypserver_master

- name: "Enable ypbind"
  service:
    name: ypbind
    enabled: true
    state: started
  when:
    - not ypserver_nopush


# Map distribution
- name: "Try up to 10min that slaves can reach the master"
  command:
    cmd: "ypwhich -d {{ ypserver_domain }} -h {{ ypserver_master }} -m"
  register: ypserver__master_up
  until: ypserver__master_up.rc == 0
  retries: 60
  delay: 10
  when:
    - inventory_hostname != ypserver_master
    - not ypserver_nopush

- name: "Transfer maps from master server to slaves"
  command: "ypxfr -d {{ ypserver_domain }} -h {{ ypserver_master }} {{ item.split()[0] }}"
  with_items: "{{ ypserver__master_up.stdout_lines }}"
  when:
    - inventory_hostname != ypserver_master
    - not ypserver_nopush

- name: "Ensure regular map updates on master"
  cron:
    name: "Update YP domain {{ ypserver_domain }}"
    minute: "*/15"
    job: "( cd {{ ypserver_ypdbdir_domain }} && make )"
  when:
    - inventory_hostname == ypserver_master
    - ypserver_set_cronjob

- name: "Place script to check for missing maps on slave"
  template:
    src: "ypxfr_update.sh.j2"
    dest: "/usr/local/sbin/ypxfr_update"
    mode: "0700"
    owner: root
    group: wheel
  when:
    - inventory_hostname != ypserver_master

- name: "Ensure regular checks for missed maps on slaves"
  cron:
    name: "Update YP domain {{ ypserver_domain }}"
    minute: "5"
    hour: "*"
    job: "-n /usr/local/sbin/ypxfr_update"
  when:
    - inventory_hostname != ypserver_master
    - ypserver_set_cronjob
